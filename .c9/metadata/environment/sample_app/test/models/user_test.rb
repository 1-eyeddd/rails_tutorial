{"filter":false,"title":"user_test.rb","tooltip":"/sample_app/test/models/user_test.rb","undoManager":{"mark":7,"position":7,"stack":[[{"start":{"row":32,"column":30},"end":{"row":33,"column":0},"action":"insert","lines":["",""],"id":12},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":33,"column":4},"end":{"row":33,"column":45},"action":"insert","lines":["duplicate_user.email = @user.email.upcase"],"id":13}],[{"start":{"row":37,"column":2},"end":{"row":38,"column":0},"action":"insert","lines":["",""],"id":14},{"start":{"row":38,"column":0},"end":{"row":38,"column":2},"action":"insert","lines":["  "]},{"start":{"row":38,"column":2},"end":{"row":39,"column":0},"action":"insert","lines":["",""]},{"start":{"row":39,"column":0},"end":{"row":39,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":38,"column":2},"end":{"row":43,"column":5},"action":"insert","lines":["test \"email addresses should be saved as lower-case\" do","    mixed_case_email = \"Foo@ExAMPle.CoM\"","    @user.email = mixed_case_email","    @user.save","    assert_equal mixed_case_email.downcase, @user.reload.email","  end"],"id":15}],[{"start":{"row":38,"column":2},"end":{"row":43,"column":5},"action":"remove","lines":["test \"email addresses should be saved as lower-case\" do","    mixed_case_email = \"Foo@ExAMPle.CoM\"","    @user.email = mixed_case_email","    @user.save","    assert_equal mixed_case_email.downcase, @user.reload.email","  end"],"id":17},{"start":{"row":38,"column":2},"end":{"row":43,"column":5},"action":"insert","lines":["test \"email addresses should be saved as lower-case\" do","    mixed_case_email = \"Foo@ExAMPle.CoM\"","    @user.email = mixed_case_email","    @user.save","    assert_equal mixed_case_email.downcase, @user.reload.email","  end"]}],[{"start":{"row":4,"column":1},"end":{"row":6,"column":5},"action":"remove","lines":[" def setup","    @user = User.new(name: \"Example User\", email: \"user@example.com\")","  end"],"id":18},{"start":{"row":4,"column":1},"end":{"row":7,"column":5},"action":"insert","lines":["def setup","    @user = User.new(name: \"Example User\", email: \"user@example.com\",","                     password: \"foobar\", password_confirmation: \"foobar\")","  end"]}],[{"start":{"row":45,"column":2},"end":{"row":46,"column":0},"action":"insert","lines":["",""],"id":19},{"start":{"row":46,"column":0},"end":{"row":46,"column":2},"action":"insert","lines":["  "]},{"start":{"row":46,"column":2},"end":{"row":47,"column":0},"action":"insert","lines":["",""]},{"start":{"row":47,"column":0},"end":{"row":47,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":46,"column":2},"end":{"row":54,"column":5},"action":"insert","lines":[" test \"password should be present (nonblank)\" do","    @user.password = @user.password_confirmation = \" \" * 6","    assert_not @user.valid?","  end","","  test \"password should have a minimum length\" do","    @user.password = @user.password_confirmation = \"a\" * 5","    assert_not @user.valid?","  end"],"id":20}]]},"ace":{"folds":[],"scrolltop":405.5,"scrollleft":0,"selection":{"start":{"row":54,"column":5},"end":{"row":54,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":24,"state":["#tmp","qStateWithoutInterpolation","[","start"],"mode":"ace/mode/ruby"}},"timestamp":1649932782831,"hash":"896cf9b1cd6c896164ee9d466e17bf2e3fbd418b"}